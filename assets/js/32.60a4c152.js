(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{430:function(t,e,s){"use strict";s.r(e);var a=s(56),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-生命周期"}},[t._v("#")]),t._v(" React 生命周期")]),t._v(" "),s("p",[t._v("图片链接 https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/")]),t._v(" "),s("h4",{attrs:{id:"挂载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#挂载"}},[t._v("#")]),t._v(" 挂载")]),t._v(" "),s("p",[t._v("当组件实例被创建并插入 DOM 中时，其生命周期调用顺序如下：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("constructor()")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("static getDerivedStateFromProps()")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("render()")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("componentDidMount()")])])])]),t._v(" "),s("h4",{attrs:{id:"更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[t._v("#")]),t._v(" 更新")]),t._v(" "),s("p",[t._v("当组件的 props 或 state 发生变化时会触发更新。组件更新的生命周期调用顺序如下：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("static getDerivedStateFromProps()")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("shouldComponentUpdate()")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("render()")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("getSnapshotBeforeUpdate()")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("componentDidUpdate()")])])])]),t._v(" "),s("h4",{attrs:{id:"卸载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#卸载"}},[t._v("#")]),t._v(" 卸载")]),t._v(" "),s("p",[t._v("当组件从 DOM 中移除时会调用如下方法：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("componentWillUnmount()")])])])]),t._v(" "),s("h4",{attrs:{id:"错误处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),s("p",[t._v("当渲染过程，生命周期，或子组件的构造函数中抛出错误时，会调用如下方法：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("static getDerivedStateFromError()")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("componentDidCatch()")])])])]),t._v(" "),s("h2",{attrs:{id:"常用的生命周期方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的生命周期方法"}},[t._v("#")]),t._v(" 常用的生命周期方法")]),t._v(" "),s("h3",{attrs:{id:"constructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[t._v("#")]),t._v(" "),s("code",[t._v("constructor()")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("如果不初始化 state 或不进行方法绑定，则不需要为 React 组件实现构造函数。")])]),t._v(" "),s("p",[t._v("在 React 组件挂载之前，会调用它的构造函数。在为 React.Component 子类实现构造函数时，应在其他语句之前调用 "),s("code",[t._v("super(props)")]),t._v("。否则，"),s("code",[t._v("this.props")]),t._v(" 在构造函数中可能会出现未定义的 bug。")]),t._v(" "),s("p",[t._v("通常，在 React 中，构造函数仅用于以下两种情况：")]),t._v(" "),s("ul",[s("li",[t._v("通过给 "),s("code",[t._v("this.state")]),t._v(" 赋值对象来初始化"),s("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/state-and-lifecycle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("内部 state"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("为"),s("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/handling-events.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("事件处理函数"),s("OutboundLink")],1),t._v("绑定实例")])]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("constructor()")]),t._v(" 函数中"),s("strong",[t._v("不要调用 "),s("code",[t._v("setState()")]),t._v(" 方法")]),t._v("。如果你的组件需要使用内部 state，请直接在构造函数中为 "),s("strong",[s("code",[t._v("this.state")]),t._v(" 赋值初始 state")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要在这里调用 this.setState()")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleClick "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("只能在构造函数中直接为 "),s("strong",[s("code",[t._v("this.state")])]),t._v(" 赋值。如需在其他方法中赋值，你应使用 "),s("strong",[s("code",[t._v("this.setState()")])]),t._v(" 替代。")]),t._v(" "),s("p",[t._v("要避免在构造函数中引入任何副作用或订阅。如遇到此场景，请将对应的操作放置在 "),s("strong",[s("code",[t._v("componentDidMount")])]),t._v(" 中。")]),t._v(" "),s("h3",{attrs:{id:"render"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[t._v("#")]),t._v(" "),s("code",[t._v("render()")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("render()\n")])])]),s("p",[s("code",[t._v("render()")]),t._v(" 方法是 class 组件中唯一必须实现的方法。")]),t._v(" "),s("p",[t._v("当 "),s("code",[t._v("render")]),t._v(" 被调用时，它会检查 "),s("code",[t._v("this.props")]),t._v(" 和 "),s("code",[t._v("this.state")]),t._v(" 的变化并返回以下类型之一：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("React 元素")]),t._v("。通常通过 JSX 创建。例如，"),s("code",[t._v("会被 React 渲染为 DOM 节点，")]),t._v(" 会被 React 渲染为自定义组件，无论是 "),s("code",[t._v("还是")]),t._v(" 均为 React 元素。")]),t._v(" "),s("li",[s("strong",[t._v("数组或 fragments")]),t._v("。 使得 render 方法可以返回多个元素。欲了解更多详细信息，请参阅 "),s("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/fragments.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("fragments"),s("OutboundLink")],1),t._v(" 文档。")]),t._v(" "),s("li",[s("strong",[t._v("Portals")]),t._v("。可以渲染子节点到不同的 DOM 子树中。欲了解更多详细信息，请参阅有关 "),s("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/portals.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("portals"),s("OutboundLink")],1),t._v(" 的文档")]),t._v(" "),s("li",[s("strong",[t._v("字符串或数值类型")]),t._v("。它们在 DOM 中会被渲染为文本节点")]),t._v(" "),s("li",[s("strong",[t._v("布尔类型或 "),s("code",[t._v("null")])]),t._v("。什么都不渲染。（主要用于支持返回 "),s("code",[t._v("test &&")]),t._v(" 的模式，其中 test 为布尔类型。)")])]),t._v(" "),s("p",[s("code",[t._v("render()")]),t._v(" 函数应该为纯函数，这意味着在不修改组件 state 的情况下，每次调用时都返回相同的结果，并且它不会直接与浏览器交互。")]),t._v(" "),s("p",[t._v("如需与浏览器进行交互，请在 "),s("code",[t._v("componentDidMount()")]),t._v(" 或其他生命周期方法中执行你的操作。保持 "),s("code",[t._v("render()")]),t._v(" 为纯函数，可以使组件更容易思考。")]),t._v(" "),s("h3",{attrs:{id:"componentdidmount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#componentdidmount"}},[t._v("#")]),t._v(" "),s("code",[t._v("componentDidMount()")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("componentDidMount()\n")])])]),s("p",[s("code",[t._v("componentDidMount()")]),t._v(" 会在组件挂载后（插入 DOM 树中）立即调用。依赖于 DOM 节点的初始化应该放在这里。如需通过网络请求获取数据，此处是实例化请求的好地方。")]),t._v(" "),s("p",[t._v("这个方法是比较适合添加订阅的地方。如果添加了订阅，请不要忘记在 "),s("code",[t._v("componentWillUnmount()")]),t._v(" 里取消订阅")]),t._v(" "),s("p",[t._v("你可以在 "),s("code",[t._v("componentDidMount()")]),t._v(" 里"),s("strong",[t._v("直接调用 "),s("code",[t._v("setState()")])]),t._v("。它将触发额外渲染，但此渲染会发生在浏览器更新屏幕之前。如此保证了即使在 "),s("code",[t._v("render()")]),t._v(" 两次调用的情况下，用户也不会看到中间状态。请谨慎使用该模式，因为它会导致性能问题。通常，你应该在 "),s("code",[t._v("constructor()")]),t._v(" 中初始化 state。如果你的渲染依赖于 DOM 节点的大小或位置，比如实现 modals 和 tooltips 等情况下，你可以使用此方式处理")]),t._v(" "),s("h3",{attrs:{id:"componentdidupdate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#componentdidupdate"}},[t._v("#")]),t._v(" "),s("code",[t._v("componentDidUpdate()")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("componentDidUpdate(prevProps, prevState, snapshot)\n")])])]),s("p",[s("code",[t._v("componentDidUpdate()")]),t._v(" 会在更新后会被立即调用。首次渲染不会执行此方法。")]),t._v(" "),s("p",[t._v("当组件更新后，可以在此处对 DOM 进行操作。如果你对更新前后的 props 进行了比较，也可以选择在此处进行网络请求。（例如，当 props 未发生变化时，则不会执行网络请求）。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("componentDidUpdate(prevProps) {\n  // 典型用法（不要忘记比较 props）：\n  if (this.props.userID !== prevProps.userID) {\n    this.fetchData(this.props.userID);\n  }\n}\n")])])]),s("p",[t._v("你也可以在 "),s("code",[t._v("componentDidUpdate()")]),t._v(" 中"),s("strong",[t._v("直接调用 "),s("code",[t._v("setState()")])]),t._v("，但请注意"),s("strong",[t._v("它必须被包裹在一个条件语句里")]),t._v("，正如上述的例子那样进行处理，否则会导致死循环。它还会导致额外的重新渲染，虽然用户不可见，但会影响组件性能。不要将 props “镜像”给 state，请考虑直接使用 props。 欲了解更多有关内容，请参阅"),s("a",{attrs:{href:"https://zh-hans.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么 props 复制给 state 会产生 bug"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("如果组件实现了 "),s("code",[t._v("getSnapshotBeforeUpdate()")]),t._v(" 生命周期（不常用），则它的返回值将作为 "),s("code",[t._v("componentDidUpdate()")]),t._v(" 的第三个参数 “snapshot” 参数传递。否则此参数将为 undefined。")]),t._v(" "),s("h3",{attrs:{id:"componentwillunmount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#componentwillunmount"}},[t._v("#")]),t._v(" "),s("code",[t._v("componentWillUnmount()")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("componentWillUnmount()\n")])])]),s("p",[s("code",[t._v("componentWillUnmount()")]),t._v(" 会在组件卸载及销毁之前直接调用。在此方法中执行必要的清理操作，例如，清除 timer，取消网络请求或清除在 "),s("code",[t._v("componentDidMount()")]),t._v(" 中创建的订阅等。")]),t._v(" "),s("p",[s("code",[t._v("componentWillUnmount()")]),t._v(" 中"),s("strong",[t._v("不应调用 "),s("code",[t._v("setState()")])]),t._v("，因为该组件将永远不会重新渲染。组件实例卸载后，将永远不会再挂载它。")])])}),[],!1,null,null,null);e.default=r.exports}}]);